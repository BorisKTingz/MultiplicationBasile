apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.android2ee.basile.multiplication"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("javaKeyStore.jks")
            storePassword "passwordOfTheJks"
            keyAlias "keyName"
            keyPassword "passwordOfTheKey"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '.debug'
        }
    }


    //define default value for your attibutes
    defaultConfig {
        resValue "string", "hidden_string", "I love you my sweety"
    }
    //Give a name to your dimension
    flavorDimensions "enfants", "operator"
    //define your flavors (as one flavor has a dimension they must all have one)
    productFlavors{
        basile{
            dimension "enfants"
//            resValue "boolean","basile_dimension","true" -> not allowed
//            resValue "int", "int_allowed", "1" -> not allowed
            resValue "string", "hidden_string", "I love you my basilou"
            resValue "color", "int_allowed", "#FF00ff"
            buildConfigField("boolean","isallowed","true")
        }
        lila{
            dimension "enfants"
            applicationId "com.android2ee.lila.multiplication"
            resValue "string", "hidden_string", "I love you my Lila"
            resValue "color", "int_allowed", "#FF00ff"
            buildConfigField("boolean","isallowed","true")
        }
        multiplication{
            dimension "operator"
        }
        addition{
            dimension "operator"
        }
    }
    //Remove the BasileAddition and LilaMultiplication flavor
    android.variantFilter { variant ->
        if(variant.getFlavors().get(0).name.equals('basile')
                && variant.getFlavors().get(1).name.equals('addition')) {
            variant.setIgnore(true);
        }
        if(variant.getFlavors().get(0).name.equals('lila')
                && variant.getFlavors().get(1).name.equals('multiplication')) {
            variant.setIgnore(true);
        }
    }
}

task printVariantsName(){
    doLast{
        android.applicationVariants.all{ variant ->
            println variant.name
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile ('com.android.support:appcompat-v7:25.1.0')
    compile 'com.android.support:recyclerview-v7:25.1.0'

    compile 'com.github.satyan:sugar:1.4'
    testCompile 'junit:junit:4.12'
}
